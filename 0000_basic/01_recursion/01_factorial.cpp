#include <bits/stdc++.h>
using namespace std;

/**
 * factorial : 팩토리얼(n!) 값을 계산하는 재귀 함수
 * @param n 팩토리얼을 계산할 정수 값. n >= 0
 * @return n의 팩토리얼 값을 반환
 *
 * 팩토리얼 n!은 1부터 n까지 모든 정수의 곱을 의미한다.<br>
 * n!을 수학적으로 표현하면 다음과 같습니다 (n! = n * (n−1) * (n−2) * ⋯ * 2 * 1)<br>
 * 여기서 n은 양의 정수다. 예를 들어, 5 * 4 * 3 * 2 * 1 = 120이 된다.<br>
 * 팩토리얼은 조합론, 확률론 등 여러 수학적 계산과 알고리즘에서 사용되며 0!의 값은 정의에 따라 1이다.
 */
int factorial(int n) {
    /**
     * 기저 조건(Base Case) : n이 0이면 1을 반환
     *
     * 기저 조건(Base Case)는 재귀 함수에서 재귀 호출이 더 이상 진행되지 않도록 하는 종료 조건이다.<br>
     * 재귀 함수는 자기 자신을 호출하여 문제의 해결 방법을 단순화하는 방식으로 작동한다.
     * 그러나 이러한 자기 호출이 무한히 계속되지 않도록, 재귀의 깊이가 어느 정도에 도달했을 때
     * 호출을 멈추고 결과를 반환하도록 하는 조건이 필요한데, 이를 '기저 조건'이라 한다.
     */
    if (n == 0) return 1;

    // 재귀 호출 : n이 0이 아니면 n * factorial(n - 1)을 반환
    return n * factorial(n - 1);
}

int main() {
    // 팩토리얼을 계산할 정수 값 선언 및 입력받음
    int num;
    cout << "양의 정수를 입력하세요 : ";
    cin >> num;

    // 입력받은 정수의 팩토리얼 계산 및 결과 출력
    cout << "Factorial of " << num << " = " << factorial(num) << "\n";
    return 0;
}